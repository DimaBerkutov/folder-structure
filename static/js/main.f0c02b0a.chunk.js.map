{"version":3,"sources":["components/File/index.js","utils/constants.js","components/Folder/index.js","containers/App.js","index.js"],"names":["FileBlock","this","props","name","mime","className","Component","folderConstants","FolderBlock","state","collapse","onFolderChange","setState","prev","onFolderShow","data","onClick","map","elem","type","Folder","children","File","App","folders","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"su7MAgBeA,E,4JAXb,WAAU,IAAD,EACcC,KAAKC,MAAnBC,EADA,EACAA,KAAMC,EADN,EACMA,KACb,OACE,sBAAKC,UAAU,aAAf,UACE,0CAAaF,KACb,0CAAaC,Y,GANGE,aCJXC,EACH,SCwCKC,G,kNA/BbC,MAAQ,CACNC,UAAU,G,EAGZC,eAAiB,WACf,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACrBH,UAAWG,EAAKH,c,EAGpBI,aAAe,WACb,EAAKF,SAAS,CAACF,UAAU,K,4CAG3B,WAAU,IAAD,SACcT,KAAKC,MAAnBC,EADA,EACAA,KAAMY,EADN,EACMA,KACNL,EAAYT,KAAKQ,MAAjBC,SACP,OACE,sBAAKL,UAAU,eAAf,UACE,oBAAGW,QAASf,KAAKU,eAAjB,qBAA0CR,KAC1C,qBAAKE,UAAS,4BAAuBK,EAAW,OAAS,IAAzD,SACGK,EAAKE,KAAI,SAAAC,GAAI,OACZA,EAAKC,OAASZ,EACV,cAACa,EAAD,CAAwBjB,KAAMe,EAAKf,KAAMY,KAAMG,EAAKG,SAAUF,KAAMD,EAAKC,MAA5DD,EAAKf,MAClB,cAACmB,EAAD,CAAsBnB,KAAMe,EAAKf,KAAMC,KAAMc,EAAKd,KAAMU,aAAc,EAAKA,cAAhEI,EAAKf,kB,GAxBNG,c,eCoBXiB,E,4MAnBbd,MAAQ,CACNe,QAAST,G,4CAGX,WAAU,IACDS,EAAWvB,KAAKQ,MAAhBe,QAEP,OACE,qBAAKnB,UAAU,MAAf,SACGmB,EAAQP,KAAI,SAAAC,GAAI,OACfA,EAAKC,OAASZ,EACV,cAACa,EAAD,CAAwBjB,KAAMe,EAAKf,KAAMY,KAAMG,EAAKG,SAAUF,KAAMD,EAAKC,MAA5DD,EAAKf,MAClB,cAACmB,EAAD,CAAsBnB,KAAMe,EAAKf,MAAtBe,EAAKf,e,GAbZG,aCJlBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f0c02b0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './style.css';\r\n\r\nclass FileBlock extends Component {\r\n  render() {\r\n    const {name, mime} = this.props;\r\n    return (\r\n      <div className=\"file-block\">\r\n        <span>name: {name}</span>\r\n        <span>mime: {mime}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileBlock;","export const folderConstants = {\n  FOLDER: 'FOLDER',\n  FILE: 'FILE',\n};\n","import React, { Component } from 'react';\r\n\r\nimport Folder from 'components/Folder';\r\nimport File from 'components/File';\r\n\r\nimport { folderConstants } from 'utils/constants';\r\n\r\nimport './style.css';\r\n\r\nclass FolderBlock extends Component {\r\n  state = {\r\n    collapse: false,\r\n  }\r\n\r\n  onFolderChange = () => {\r\n    this.setState(prev => ({\r\n      collapse: !prev.collapse,\r\n    }));\r\n  }\r\n  onFolderShow = () => {\r\n    this.setState({collapse: true});\r\n  }\r\n\r\n  render() {\r\n    const {name, data} = this.props;\r\n    const {collapse} = this.state;\r\n    return (\r\n      <div className=\"folder-block\">\r\n        <b onClick={this.onFolderChange}>Folder: {name}</b>\r\n        <div className={`folder-block-data ${collapse ? 'show' : ''}`}>\r\n          {data.map(elem =>\r\n            elem.type === folderConstants.FOLDER\r\n              ? <Folder key={elem.name} name={elem.name} data={elem.children} type={elem.type}/>\r\n              : <File key={elem.name} name={elem.name} mime={elem.mime} onFolderShow={this.onFolderShow}/>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FolderBlock;","import React, { Component } from 'react';\n\nimport Folder from 'components/Folder';\nimport File from 'components/File';\n\nimport './App.css';\nimport { folderConstants } from 'utils/constants';\nimport data from \"./data.json\";\n\nclass App extends Component {\n  state = {\n    folders: data,\n  }\n\n  render() {\n    const {folders} = this.state;\n\n    return (\n      <div className=\"App\">\n        {folders.map(elem =>\n          elem.type === folderConstants.FOLDER\n            ? <Folder key={elem.name} name={elem.name} data={elem.children} type={elem.type}/>\n            : <File key={elem.name} name={elem.name} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}